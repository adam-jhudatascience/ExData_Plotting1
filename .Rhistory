#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2013_2017.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2013_2017.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.25, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.50, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.45, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.40, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.35, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.30, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/yyc_2010_2013.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.25, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL_results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL_results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.15, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.15, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.20, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.25, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.30, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.35, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.40, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.45, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
#city
#Reads the data without the vote details
citydata <- read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv")[5:ncol(read.csv("~/Desktop/CentralityDataScience/CityBlocs/Code/YUL-results.csv"))]
#Produces a disagreement matrix
citymatrix <- matrix(,ncol(citydata),ncol(citydata))
for(i in 1:ncol(citydata)){
for(j in 1:ncol(citydata)){
citymatrix[i, j] <- 1 - (table(citydata[,i], citydata[,j], exclude="--missing--")[1] + table(citydata[,i], citydata[,j], exclude="--missing--")[4]) / (table(citydata[,i], citydata[,j], exclude="--missing--")[1] +table(citydata[,i], citydata[,j], exclude="--missing--")[2] + table(citydata[,i], citydata[,j], exclude="--missing--")[3] +table(citydata[,i], citydata[,j], exclude="--missing--")[4])
}
}
row.names(citymatrix) <- names(citydata)
colnames(citymatrix) <- names(citydata)
#Produces an agreement table from the matrix
citytable <- data.frame(i=rep(row.names(citymatrix), ncol(citymatrix)), j=rep(colnames(citymatrix), each=nrow(citymatrix)), score=as.vector(citymatrix))
citytable$i.id <- match(citytable$i, unique(citytable$i)) - 1
citytable$j.id <- match(citytable$j, unique(citytable$j)) - 1
#determines the links if the link hasn't been done already and citytable$score is not less than a number
citytable$link2 <- ifelse(citytable$i.id < citytable$j.id, NA, ifelse(citytable$score > 0.50, NA, paste( "{source: '", citytable$i, "', target: '", citytable$j, "'}", sep="")))
#Takes the links and formats them in a list- note it generates some extraneous characters at the beginning and the end
cityjsondata <- gsub("NA, ", "", gsub(", NA", "", paste(citytable$link2,collapse=", ")))
#Copies cityjsondata to the clipboard
clip <- pipe("pbcopy", "w")
write.table(cityjsondata, file=clip)
close(clip)
install.packages("KernSmooth")
library(KernSmooth)
str(read.table)
getwd()
setwd("Desktop/CentralityDataScience/Coursera")
dir()
setwd("DS4-ExploratoryDataAnalysis/A1")
dir()
files <- dir()
files[2]
a1data <- read.table(files[2], header = T, sep = ";", nrows=10)
a1data
?object.size
object.size(a1data)
a1data <- read.table(files[2], header = T, sep = ";", nrows=20)
object.size(a1data)
a1data <- read.table(files[2], header = T, sep = ";", nrows=30)
object.size(a1data)
str(readLines)
?readLines
a1data <- read.table(files[2], header = T, sep = ";")
dim(a1data)
names(a1data)
a1data[1,"Date"]
as.Date(a1data[1,"Date"])
str(strptime)
?strptime
strptime(a1data[1,"Date"], "%Y/%m/%d")
strptime(a1data[1,"Date"], "%d/%m/%Y")
typeof(strptime(a1data[1,"Date"], "%d/%m/%Y"))
as.Date(strptime(a1data[1,"Date"], "%d/%m/%Y"))
typeof(as.Date(strptime(a1data[1,"Date"], "%d/%m/%Y")))
?as.Date
as.Date(a1data[1,"Date"], "%d/%m/%Y")
typeof(as.Date(a1data[1,"Date"], "%d/%m/%Y"))
is.Date(as.Date(a1data[1,"Date"], "%d%m%Y"))
search(is.Date)
?is.date
??is.date
?subset
a1data[,"Date"] <- lapply(a1data[,"Date"], as.Date, format="%d/%m/%Y")
View(`a1data`)
subset(a1data, Date == "16/12/2006")
subset(a1data, Date == "2/2/2007" | Date == "2/2/2007")
a1small <- subset(a1data, Date == "2/2/2007" | Date == "2/2/2007")
a1small
names(a1small)
rm(a1data)
?hist
hist(a1small$Global_active_power)
hist(as.numeric(a1small$Global_active_power))
hist(as.numeric(a1small$Global_active_power), col="red")
title(main = "Global Active Power")
hist(as.numeric(a1small$Global_active_power), col="red", title="Global Active Power")
hist(as.numeric(a1small$Global_active_power), col="red", main="Global Active Power")
hist(as.numeric(a1small$Global_active_power), col="red", main="Global Active Power")
hist(as.numeric(a1small$Global_active_power), col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
>hist
?hist
str(seq)
seq(1,10)
seq(0,6)
seq(0,6, 0.5)
hist(as.numeric(a1small$Global_active_power), col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)", breaks=seq(0,6.0.5))
is.vector(seq(0,6,0.5))
hist(as.numeric(a1small$Global_active_power), col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)", breaks=seq(0,6,0.5))
hist(as.numeric(a1small$Global_active_power), col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
a1small[1,]
a1small[,"Global_active_power"]
max(a1small[,"Global_active_power"])
as.numeric(a1small[,"Global_active_power"])
?read.table
rm(a1small)
a1data <- read.table(files[2], header = T, sep = ";", colClasses = "character")
a1data[1,"Date"]
a1data[1,"Date"]
strptime(a1data[1,"Date"], format="%d/%m/%Y")
typeof(strptime(a1data[1,"Date"], format="%d/%m/%Y"))
typeof(strptime(a1data[,"Date"], format="%d/%m/%Y"))
typeof(sapply(a1data[,"Date"], strptime, format="%d/%m/%Y"))
typeof(sapply(a1data[1:10,"Date"], strptime, format="%d/%m/%Y"))
sapply(a1data[1:10,"Date"], strptime, format="%d/%m/%Y")
1:10
lapply(a1data[1:10,"Date"], strptime, format="%d/%m/%Y")
?as.Date
?as.Date
?strptime
a1data[1,"Date"]
as.Date(a1data[1,"Date"])
as.Date(a1data[1,"Date"], format="%d/%m/%Y")
typeof(as.Date(a1data[1,"Date"], format="%d/%m/%Y"))
typeof(strptime(a1data[1,"Date"], format="%d/%m/%Y"))
lapply(a1data[1:10,"Date"], as.Date, format="%d/%m/%Y")
typeof(lapply(a1data[1:10,"Date"], as.Date, format="%d/%m/%Y"))
typeof(sapply(a1data[1:10,"Date"], as.Date, format="%d/%m/%Y"))
sapply(a1data[1:10,"Date"], as.Date, format="%d/%m/%Y")
a1small <- subset(a1data, Date="1/2/2007" | Date="2/2/2007")
a1small <- subset(a1data, Date=="1/2/2007" | Date=="2/2/2007")
a1small[,"Date"] <- sapply(a1small$Date, as.Date, format="%d/%m/%Y")
a1small$Date
summary(a1data$Global_power)
a1data$Global_power
names(a1small)
a1small$Global
a1small$Global_active_power
as.numeric(a1small$Global_active_power)
summary(as.numeric(a1small$Global_active_power))
hist(as.numeric(a1small$Global_active_power))
hist(as.numeric(a1small$Global_active_power),col="red")
hist(as.numeric(a1small$Global_active_power),col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
source('~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/plot1.R')
source('~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/plot1.R')
source('~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/plot1.R')
source('~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/plot1.R')
a1data <- subset(a1full,Date=="1/2/2007" | Date=="2/2/2007")
names(a1full)
a1full <- read.table(unz(temp, filename), colClasses="character", header=T)
a1full <- read.table(unz(temp, filename), colClasses="character", header=T, sep=";")
a1full <- read.table(unz(temp, filename), colClasses="character", header=T, sep=";", nrows=10)
source('~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/plot1.R')
debug(plot1)
debug("plot1.R")
source('~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/plot1.R')
save.image("~/Desktop/CentralityDataScience/Coursera/DS4-ExploratoryDataAnalysis/A1/a1.RData")
